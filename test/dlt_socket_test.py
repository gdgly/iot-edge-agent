#!/usr/bin/env python3
# -*- encoding: utf-8 -*-

# *************************************************
# Author       : aゞ小波
# CreateTime   : 2020-02-21 21:19
# Email        : 465728296@qq.com
# Filename     : dlt_socket_test.py
# Description  :
# *************************************************

import socketserver
import struct
import time
from multiprocessing import Process

class MyServer(socketserver.BaseRequestHandler):
    def handle(self):
        conn = self.request
        while True:
            msg = conn.recv(1024)
            print("recv: ", end='')
            print(msg)

            if msg[0] == 0xfe and msg[22] == 0x00:
                response = [0xfe,0xfe,0xfe,0xfe,0x68,0x34,0x00,0xc3,0x05,0x01,0x00,0x27,0x11,0x19,0x00,0x00,0x95,0xa8,0x85,0x01,0x01,0x00,0x00,0x02,0x00,0x01,0x01,0x05,0x05,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x5a,0x69,0x16]
            elif msg[0] == 0xfe and msg[22] == 0x10:
                response = [0xfe,0xfe,0xfe,0xfe,0x68,0x34,0x00,0xc3,0x05,0x01,0x00,0x27,0x11,0x19,0x00,0x00,0x95,0xa8,0x85,0x01,0x01,0x00,0x10,0x02,0x00,0x01,0x01,0x05,0x06,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x91,0x55,0x16]
            elif msg[0] == 0xfe and msg[22] == 0x20:
                response = [0xFE,0xFE,0xFE,0xFE,0x68,0x34,0x00,0xC3,0x05,0x01,0x00,0x27,0x11,0x19,0x00,0x00,0x95,0xA8,0x85,0x01,0x01,0x00,0x20,0x02,0x00,0x01,0x01,0x05,0x06,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x0D,0x3F,0x16]
            elif msg[0] == 0x01:
                response = [0x01, 0x03, 0x04, 0x00, 0x10, 0x00, 0x10, 0xFA, 0x3A]
            # elif msg[0] == 0x02:
            #     response = [0x02, 0x03, 0x04, 0x00, 0x20, 0x00, 0x20, 0xC9, 0x21]
            # elif msg[0] == 0x03:
            #     response = [0x03, 0x03, 0x04, 0x00, 0x30, 0x00, 0x30, 0xD9, 0xE8]
            else:
                response = ""

            data = struct.pack("%dB"%(len(response)),*response)
            conn.send(data)



if __name__ == '__main__':

    print("Server Start")
    print("Listen on localhost 8080, 8081")

    server1 = socketserver.ForkingTCPServer(('0.0.0.0', 8080), MyServer)
    server1.max_children=2

    server2 = socketserver.ForkingTCPServer(('0.0.0.0', 8081), MyServer)
    server2.max_children = 2

    p = Process(target=server2.serve_forever, args=())
    p.start()

    server1.serve_forever()
    p.join()
